apiVersion: v1
kind: Namespace
metadata:
  name: grafana
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: grafana-data
  namespace: grafana
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: grafana
  labels:
    app: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - image: grafana/grafana:latest
          name: grafana
          ports:
            - containerPort: 3000
              name: http
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
            - mountPath: "/var/lib/grafana"
              name: grafana-data
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: grafana
  labels:
    app: grafana
spec:
  ports:
    - port: 3000
      protocol: TCP
  selector:
    app: grafana
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: grafana
  namespace: grafana
spec:
  interval: 10m0s
  dependsOn:
    - name: infra-config
      namespace: flux-system
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  path: ./templates/ingress/overlays/internal-ingress
  prune: true
  wait: true
  timeout: 5m0s
  targetNamespace: grafana
  postBuild:
    substitute:
      ingress_name: grafana
      ingress_host: grafana.local.abbottland.io
      ingress_service_name: grafana
      ingress_service_port: "3000"
      ingress_configuration_snippet: ''
  commonMetadata:
    annotations:
      nginx.org/websocket-services: "websockettest-cluster-ip-service"
      nginx.ingress.kubernetes.io/x-forwarded-proto: "https"
