apiVersion: v1
kind: Namespace
metadata:
  name: loki
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: loki-data
  namespace: loki
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: loki
  labels:
    app: loki
  name: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - image: grafana/loki:2.4.0
          name: loki
          ports:
            - containerPort: 3100
              name: http
          volumeMounts:
            - name: config-volume
              mountPath: /etc/loki
            - mountPath: "/loki_data"
              name: loki-data
      volumes:
        - name: config-volume
          configMap:
            name: loki-config
        - name: loki-data
          persistentVolumeClaim:
            claimName: loki-data
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: loki
  labels:
    app: loki
spec:
  ports:
    - port: 3100
      protocol: TCP
  selector:
    app: loki
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: loki
  namespace: loki
spec:
  interval: 10m0s
  dependsOn:
    - name: infra-config
      namespace: flux-system
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  path: ./templates/ingress/overlays/internal-ingress
  prune: true
  wait: true
  timeout: 5m0s
  targetNamespace: loki
  postBuild:
    substitute:
      ingress_name: loki
      ingress_host: loki.local.abbottland.io
      ingress_service_name: loki
      ingress_service_port: "3100"
      ingress_configuration_snippet: ''
  commonMetadata:
    annotations:
      nginx.org/websocket-services: "websockettest-cluster-ip-service"
      nginx.ingress.kubernetes.io/x-forwarded-proto: "https"
